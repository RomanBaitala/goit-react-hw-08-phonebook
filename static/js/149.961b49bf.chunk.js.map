{"version":3,"file":"static/js/149.961b49bf.chunk.js","mappings":"gSAIaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,SAAC,KAAa,WACZ,UAAC,KAAU,CAACC,SAfS,SAAAC,GACvBA,EAAEC,iBAEFJ,GACEK,EAAAA,EAAAA,IAAU,CACRC,MAAOH,EAAEI,cAAcC,SAASF,MAAMG,MACtCC,SAAUP,EAAEI,cAAcC,SAASE,SAASD,SAIhDN,EAAEI,cAAcI,OAClB,EAI4CC,aAAa,KAAI,WACvD,UAAC,KAAW,qBAEV,SAAC,KAAW,CAACA,aAAa,QAAQC,KAAK,QAAQC,KAAK,cAEtD,UAAC,KAAW,wBAEV,SAAC,KAAW,CAACF,aAAa,mBAAmBC,KAAK,WAAWC,KAAK,iBAGpE,SAAC,KAAY,CAACD,KAAK,SAAQ,uBAInC,EChCaE,EAAa,WACxB,IAAMf,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,SAAC,KAAa,WACZ,UAAC,KAAU,CAACC,SAhBS,SAAAC,GACvBA,EAAEC,iBAEFJ,GACEgB,EAAAA,EAAAA,IAAa,CACXF,KAAMX,EAAEI,cAAcC,SAASM,KAAKL,MACpCH,MAAOH,EAAEI,cAAcC,SAASF,MAAMG,MACtCC,SAAUP,EAAEI,cAAcC,SAASE,SAASD,SAIhDN,EAAEI,cAAcI,OAClB,EAI4CC,aAAa,KAAI,WACvD,UAAC,KAAW,wBAEV,SAAC,KAAW,CAACA,aAAa,WAAWC,KAAK,OAAOC,KAAK,aAExD,UAAC,KAAW,qBAEV,SAAC,KAAW,CAACF,aAAa,QAAQC,KAAK,QAAQC,KAAK,cAEtD,UAAC,KAAW,wBAEV,SAAC,KAAW,CAACF,aAAa,mBAAmBC,KAAK,WAAWC,KAAK,iBAGpE,SAAC,KAAY,CAACD,KAAK,SAAQ,0BAInC,ECvCaI,EAAiB,WAC5B,OACE,4BACE,SAAC,KAAa,CAACC,GAAG,SAAQ,oBAC1B,SAAC,KAAa,CAACA,GAAG,UAAS,uBAGjC,E,UCNaC,EAAW,WACtB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KAER,OACE,8CACmB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMN,KAAI,QACvB,SAAC,KAAa,CAACI,GAAG,UAAS,uBAGjC,C,qcCTaI,EAAYC,EAAAA,GAAAA,IAAU,iPAOtBC,EAAAA,EAAAA,GAAS,EAAG,GAEbA,EAAAA,EAAAA,QAAAA,GAEGA,EAAAA,EAAAA,UAAAA,EACJA,EAAAA,EAAAA,OAAAA,YAEWA,EAAAA,EAAAA,OAAAA,sB,6BCXTC,EAAe,WAC1B,IAAQC,GAAeL,EAAAA,EAAAA,KAAfK,WAER,OACE,iCACE,UAACJ,EAAS,YACR,4BACE,SAAC,KAAU,CAACJ,GAAG,IAAG,SAAE,SACnBQ,IAAc,SAAC,KAAa,CAACR,GAAG,aAAY,SAAE,oBAEhDQ,GAAa,SAAC,KAAQ,KAAM,SAACC,EAAA,GAAc,QAG9C,SAAC,KAAM,MAGb,ECpBaC,EAAe,WAC1B,OAAO,SAACH,EAAY,GACtB,EAEA,G","sources":["components/Auth/AuthForms/LoginForm.jsx","components/Auth/AuthForms/SignupForm.jsx","components/Auth/AuthorizeLinks/AuthorizeLinks.jsx","components/Auth/UserMenu/UserMenu.jsx","components/SharedLayout/SharedLayout.styled.jsx","components/SharedLayout/SharedLayout.jsx","pages/CommonLayout.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/operations';\nimport { SectionCenter, StyledForm, StyledLabel, StyledInput, StyledButton } from 'components/Common';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      loginUser({\n        email: e.currentTarget.elements.email.value,\n        password: e.currentTarget.elements.password.value,\n      })\n    );\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <SectionCenter>\n      <StyledForm onSubmit={handleFormSubmit} autoComplete=\"on\">\n        <StyledLabel>\n          Email:\n          <StyledInput autoComplete=\"email\" type=\"email\" name=\"email\" />\n        </StyledLabel>\n        <StyledLabel>\n          Password:\n          <StyledInput autoComplete=\"current-password\" type=\"password\" name=\"password\" />\n        </StyledLabel>\n\n        <StyledButton type=\"submit\">Login</StyledButton>\n      </StyledForm>\n    </SectionCenter>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/operations';\nimport { SectionCenter, StyledForm, StyledLabel, StyledInput, StyledButton } from 'components/Common';\n\nexport const SignupForm = () => {\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      registerUser({\n        name: e.currentTarget.elements.name.value,\n        email: e.currentTarget.elements.email.value,\n        password: e.currentTarget.elements.password.value,\n      })\n    );\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <SectionCenter>\n      <StyledForm onSubmit={handleFormSubmit} autoComplete=\"on\">\n        <StyledLabel>\n          Username:\n          <StyledInput autoComplete=\"username\" type=\"text\" name=\"name\" />\n        </StyledLabel>\n        <StyledLabel>\n          Email:\n          <StyledInput autoComplete=\"email\" type=\"email\" name=\"email\" />\n        </StyledLabel>\n        <StyledLabel>\n          Password:\n          <StyledInput autoComplete=\"current-password\" type=\"password\" name=\"password\" />\n        </StyledLabel>\n\n        <StyledButton type=\"submit\">Register</StyledButton>\n      </StyledForm>\n    </SectionCenter>\n  );\n};\n","import { StyledNavLink } from 'components/Common';\n\nexport const AuthorizeLinks = () => {\n  return (\n    <div>\n      <StyledNavLink to=\"/login\">Login</StyledNavLink>\n      <StyledNavLink to=\"/signup\">Sign Up</StyledNavLink>\n    </div>\n  );\n};\n","import { StyledNavLink } from 'components/Common';\nimport { useAuth } from 'hooks/useAuth';\n\nexport const UserMenu = () => {\n  const { user } = useAuth();\n\n  return (\n    <div>\n      {`Welcome, ${user?.name} | `}\n      <StyledNavLink to=\"/logout\">Log out</StyledNavLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../Common/Theme';\n\nexport const HeaderBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  margin: 0;\n  padding: ${theme.mp(3, 4)};\n\n  height: ${theme.spacing[5]}px;\n\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.defaultText};\n\n  background-color: ${theme.colors.pageBackgroundAccent};\n`;\n","import { Outlet } from 'react-router-dom';\nimport { StyledLink, StyledNavLink } from 'components/Common';\nimport { HeaderBar } from './SharedLayout.styled';\nimport { UserMenu, AuthorizeLinks } from 'components/Auth';\nimport { useAuth } from 'hooks/useAuth';\n\nexport const SharedLayout = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <>\n      <HeaderBar>\n        <div>\n          <StyledLink to=\"/\">{'Home'}</StyledLink>\n          {isLoggedIn && <StyledNavLink to=\"/phonebook\">{'My Phonebook'}</StyledNavLink>}\n        </div>\n        {isLoggedIn ? <UserMenu /> : <AuthorizeLinks />}\n      </HeaderBar>\n\n      <Outlet />\n    </>\n  );\n};\n","import { SharedLayout } from 'components/SharedLayout/SharedLayout';\n\nexport const CommonLayout = () => {\n  return <SharedLayout />;\n};\n\nexport default CommonLayout;\n"],"names":["LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","loginUser","email","currentTarget","elements","value","password","reset","autoComplete","type","name","SignupForm","registerUser","AuthorizeLinks","to","UserMenu","user","useAuth","HeaderBar","styled","theme","SharedLayout","isLoggedIn","Auth","CommonLayout"],"sourceRoot":""}